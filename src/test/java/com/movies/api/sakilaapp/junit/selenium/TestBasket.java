package com.movies.api.sakilaapp.junit.selenium;// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.junit.jupiter.api.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.*;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestBasket {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @Before
    public void setUp() {

        System.setProperty("webdriver.chrome.driver","C:\\Program Files\\Java\\chromedriver.exe");
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    @After
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void testAddToBasket() {
        driver.get("http://localhost:3000/");
        driver.manage().window().setSize(new Dimension(1294, 1440));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".filmSection:nth-child(1) .viewButton")));
        }
        driver.findElement(By.cssSelector(".filmSection:nth-child(1) .viewButton")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("button:nth-child(12)")));
        }
        driver.findElement(By.cssSelector("button:nth-child(12)")).click();
        driver.findElement(By.cssSelector("li:nth-child(5) button")).click();
        {
            String element = driver.findElement(By.cssSelector("h2")).getText();
            Assertions.assertEquals("ACADEMY DINOSAUR", element);
        }
    }

    @Test
    public void testRemoveFromBasket() {
        driver.get("http://localhost:3000/");
        driver.manage().window().setSize(new Dimension(1294, 1440));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".filmSection:nth-child(3) .viewButton")));
        }
        driver.findElement(By.cssSelector(".filmSection:nth-child(3) .viewButton")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("button:nth-child(12)")));
        }
        driver.findElement(By.cssSelector("button:nth-child(12)")).click();
        driver.findElement(By.cssSelector("li:nth-child(5) button")).click();
        driver.findElement(By.cssSelector("button:nth-child(5)")).click();
        String actualText = driver.findElement(By.cssSelector("p:nth-child(1)")).getText();
        String expectedText = "There are no items currently in your basket.";
        Assertions.assertEquals(expectedText, actualText);
    }

    @Test
    public void testIncreaseItemQuantity() {
        driver.get("http://localhost:3000/");
        driver.manage().window().setSize(new Dimension(1294, 1440));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".filmSection:nth-child(2) .viewButton")));
        }
        driver.findElement(By.cssSelector(".filmSection:nth-child(2) .viewButton")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("button:nth-child(12)")));
        }
        driver.findElement(By.cssSelector("button:nth-child(12)")).click();
        driver.findElement(By.cssSelector("li:nth-child(5) button")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        String actualQuantity = driver.findElement(By.cssSelector(".left > h4:nth-child(2)")).getText();
        String expectedQuantity = "Quantity: 5 -+";
        Assertions.assertEquals(expectedQuantity, actualQuantity);
    }

    @Test
    public void testDecreaseItemQuantity() {
        driver.get("http://localhost:3000/");
        driver.manage().window().setSize(new Dimension(1294, 1440));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".filmSection:nth-child(2) .viewButton")));
        }
        driver.findElement(By.cssSelector(".filmSection:nth-child(2) .viewButton")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("button:nth-child(12)")));
        }
        driver.findElement(By.cssSelector("button:nth-child(12)")).click();
        driver.findElement(By.cssSelector("li:nth-child(5) button")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("h4 > button:nth-child(1)")).click();
        driver.findElement(By.cssSelector("h4 > button:nth-child(1)")).click();
        String actualQuantity = driver.findElement(By.cssSelector(".left > h4:nth-child(2)")).getText();
        String expectedQuantity = "Quantity: 1 -+";
        Assertions.assertEquals(expectedQuantity, actualQuantity);
    }

    @Test
    public void testDecreaseItemQuantityPastZero() {
        driver.get("http://localhost:3000/");
        driver.manage().window().setSize(new Dimension(1294, 1440));
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".filmSection:nth-child(2) .viewButton")));
        }
        driver.findElement(By.cssSelector(".filmSection:nth-child(2) .viewButton")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("button:nth-child(12)")));
        }
        driver.findElement(By.cssSelector("button:nth-child(12)")).click();
        driver.findElement(By.cssSelector("li:nth-child(5) button")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("button:nth-child(2)")).click();
        driver.findElement(By.cssSelector("h4 > button:nth-child(1)")).click();
        driver.findElement(By.cssSelector("h4 > button:nth-child(1)")).click();
        driver.findElement(By.cssSelector("h4 > button:nth-child(1)")).click();
        String actualText = driver.findElement(By.cssSelector("p:nth-child(1)")).getText();
        String expectedText = "There are no items currently in your basket.";
        Assertions.assertEquals(expectedText, actualText);
    }


}
